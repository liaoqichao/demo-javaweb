<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
	<!-- 加载属性文件 ，整合后去掉-->
	
	<!-- settings全局配置参数-->
	<settings>
		<!-- 打开延迟加载,默认为false -->
		<setting name="lazyLoadingEnabled" value="true"/>
		<!-- 设置为消极加载，默认为true。默认为积极加载，还没调用关联对象的方法或者获取关联对象就直接发出sql加载完毕 -->
		<setting name="aggressiveLazyLoading" value="false"/>
		
		<!-- 开启二级缓存,默认是值是true，开启状态 -->
		<setting name="cacheEnabled" value="true"/>
	</settings>
	<!-- 别名定义，别名是映射输入参数类型和结果类型的全限定名的简化，例如把mybatis.po.User别名定义为User -->
	<typeAliases>
		<!-- 
			批量别名的定义。例如po包或者domain包后面会有很多类，如果每个都定义很很麻烦 
			指定包名，mybat会自动扫描包中的po类，自动定义别名，别名就是类名，首字母大写或小写都可以！
		-->
		<package name="springmybatis.po"/>
	</typeAliases>
	
	<!-- 和spring整合后 environments配置将废除，整合后去掉-->

	
	<!-- 加载映射文件 -->
	<mappers>
		<!-- 通过resource方法，一次加载一个映射文件  -->
		<mapper resource="sqlmap/User.xml"/>

		<!-- 
			批量加载mapper映射文件
			指定mapper接口的包名，mybatis自动扫描改包名下的所有mapper接口。
			遵循规范：和使用mapper接口加载映射文件一样。
			
			有在beans.xml中自动扫描创建mapper代理对象的配置，自动扫描批量加载mapper映射文件的配置可以不要.
			注意：这两个自动扫描的意义不同！
		 -->
<!-- 		<package name="springmybatis.mapper"/> -->
	</mappers>
</configuration>
